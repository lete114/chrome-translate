import { getScrollbarInfo } from './public'

export const PREFIX = 'ct'
export const STORAGE_CONFIG_KEY = `${PREFIX}-config`

export const BILINGUAL_CONTAINER = `${PREFIX}-bilingual-container`
export const BILINGUAL_PARAGRAPH = `${PREFIX}-bilingual-paragraph`
export const TRANSLATE_ATTR = `data-${PREFIX}-translate`
export const SCROLLBAR_INFO = getScrollbarInfo()

// DOM selectors
export const DOM_SELECTORS = {
  EXCLUDE_DEFAULT: [
    'script',
    'style',
    'noscript',
    'iframe',
    'object',
    'embed',
    'canvas',
    'svg',
    'math',
    'pre code',
    'pre',
    'code',
    'kbd',
    'samp',
    'var',
    '[data-translate="no"]',
    '.notranslate',
    '[translate="no"]',
    '.tooltip',
    '.alt-text',
    '[role="tooltip"]',
    'input[type="hidden"]',
    'input[placeholder]',
    '[title]:empty',
    '[alt]:empty',
  ],
  BLOCK_ELEMENTS: [
    'div',
    'p',
    'h1',
    'h2',
    'h3',
    'h4',
    'h5',
    'h6',
    'article',
    'section',
    'header',
    'footer',
    'main',
    'aside',
    'nav',
    'blockquote',
    'pre',
    'li',
    'td',
    'th',
  ],
  INLINE_ELEMENTS: [
    'a',
    'b',
    'strong',
    'span',
    'em',
    'i',
    'u',
    'small',
    'sub',
    'sup',
    'font',
    'mark',
    'cite',
    'q',
    'abbr',
    'time',
    'ruby',
    'bdi',
    'bdo',
    'img',
    'br',
    'wbr',
    'svg',
    'var',
    'code',
    'big',
    'tt',
    'kbd',
    'samp',
  ],
  NON_TRANSLATABLE_TAGS: [
    'script',
    'style',
    'code',
    'pre',
    'samp',
    'kbd',
    'var',
    'textarea',
    'input',
    'select',
    'option',
    'noscript',
    'template',
    'svg',
    'canvas',
    'math',
    'iframe',
    'object',
    'embed',
    'meta',
    'link',
    'head',
    // 可选：可能需要特殊处理
    'title',
  ],
  BILINGUAL_CONTAINER: `.${BILINGUAL_CONTAINER}`,
  BILINGUAL_PARAGRAPH: `.${BILINGUAL_PARAGRAPH}`,
}

// Text processing constants
export const TEXT_PROCESSING = {
  MIN_TEXT_LENGTH: 1,
  MIN_SIGNIFICANT_LENGTH: 1,
  MAX_TEXT_LENGTH: 5000,
  PARAGRAPH_SEPARATOR: '\n\n',
}

// Regular expressions
export const REGEX_PATTERNS = {
  PURE_NUMBERS_SYMBOLS: /^[\d\W]*$/,
  CHINESE_CHARS: /[\u4E00-\u9FFF\u3400-\u4DBF]/,
  TECHNICAL_CONTENT: [
    /\b(API|HTTP|JSON|XML|CSS|HTML|JavaScript|Python|Java|SQL)\b/i,
    /\b(function|class|method|variable|parameter|return)\b/i,
    /[{}[\]();]/,
    /https?:\/\//,
    /\w+\.\w+\(/,
    /\$\w+/,
    /@\w+/,
  ],
  URL: /https?:\/\/\S+/g,
  EMAIL: /[\w.%+-]+@[a-z0-9.-]+\.[a-z]{2,}/gi,
}
